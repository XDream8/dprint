{"version":3,"file":"static/js/5853.45957364.chunk.js","mappings":"+PAAM,SAAUA,EAAYC,GAC1B,MAAQ,QAAQC,KAAKD,GAAyB,UAAGA,EAAI,MAAdA,EAGnC,SAAUE,K,+qBCEhB,cA2CE,WAAYC,GAAZ,MACE,YAAMA,IAAM,K,OA8Dd,EAAAC,UAAY,SAACC,GACX,EAAKC,iBAAmBD,GA9DxB,EAAKC,sBAAmBC,E,EA0J5B,OAvM+B,OAgD7B,YAAAC,kBAAA,WACEC,KAAKC,cAGP,YAAAC,mBAAA,SAAmBC,GACX,MAAyDH,KAAKN,MAA5DU,EAAQ,WAAEC,EAAK,QAAEC,EAAM,SAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAEpD,EAAyBT,KAAKU,OAAOC,WAAnCC,EAAQ,WAAEC,EAAQ,WAEtBb,KAAKN,MAAMkB,WAAaA,EAASE,YACnCF,EAASG,SAASf,KAAKN,MAAMkB,UAGP,MAApBZ,KAAKN,MAAMsB,OAAiBhB,KAAKN,MAAMsB,QAAUH,EAASC,aAC5Dd,KAAKiB,gCAAiC,EAEtCjB,KAAKU,OAAOQ,oBAAoBC,eAGhCN,EAASO,mBACP,GACA,CACE,CACEC,MAAOR,EAASS,oBAChBC,KAAMvB,KAAKN,MAAMsB,SAKvBhB,KAAKU,OAAOQ,oBAAoBC,eAChCnB,KAAKiB,gCAAiC,GAGpCd,EAAUC,WAAaA,IACzB,0BAA+BQ,EAAUR,GACzC,0BAA+BS,EAAUT,IAEvCD,EAAUE,QAAUA,GACtB,kBAAuBA,IAGvBL,KAAKU,QACJF,IAAUL,EAAUK,OAASF,IAAWH,EAAUG,QAEnDN,KAAKU,OAAOc,SAEVrB,EAAUI,UAAYA,GACxBP,KAAKU,OAAOe,cAAa,OACnBhB,EAAY,CAAEiB,qBAAsBjB,GAAc,IACnDF,KAKT,YAAAoB,qBAAA,WACE3B,KAAK4B,iBAOP,YAAAC,gBAAA,WAGE,OADgBA,EADY7B,KAAKN,MAAV,iBACS,IACd,IAGpB,YAAAoC,eAAA,SAAepB,GAAf,WACEV,KAAKN,MAAMoC,eAAepB,EAAQ,GAE1B,IAAAG,EAAaH,EAAOC,WAAZ,SAChBX,KAAK+B,cAAgBlB,EAASmB,oBAAmB,SAACC,GAC3C,EAAKhB,gCACR,EAAKvB,MAAMwC,SAASrB,EAASC,WAAYmB,OAK/C,YAAAE,kBAAA,SAAkBzB,IAEhByB,EAD8BnC,KAAKN,MAAV,mBACPgB,EAAQ,IAG5B,YAAA0B,WAAA,SAAWpB,EAAeJ,GAChB,IAAAR,EAAaJ,KAAKN,MAAV,SACV2C,EAAgB,qBAA0BzB,EAAUR,GACpDkC,EAAgB,qBAA0BtB,EAAOZ,GACvDJ,KAAKU,OAAO6B,SAAS,CACnB3B,SAAUyB,EACVxB,SAAUyB,KAId,YAAArC,WAAA,WACE,IAAMe,EACgB,MAApBhB,KAAKN,MAAMsB,MAAgBhB,KAAKN,MAAMsB,MAAQhB,KAAKN,MAAM8C,aACrD,EACJxC,KAAKN,MADCkB,EAAQ,WAAEP,EAAK,QAAEE,EAAO,UAAEkC,EAAgB,mBAAEhC,EAAS,YAEzDT,KAAKH,mBAEPG,KAAK6B,kBACL7B,KAAKU,OAAS,0BACZV,KAAKH,iBAAgB,SAEfY,EAAY,CAAEiB,qBAAsBjB,GAAc,IACnDF,GACCF,EAAQ,CAAEA,MAAK,GAAK,IAE1BoC,GAGFzC,KAAKoC,WAAWpB,EAAOJ,GACvBZ,KAAK8B,eAAe9B,KAAKU,UAI7B,YAAAkB,cAAA,WACE,GAAI5B,KAAKU,OAAQ,CACfV,KAAKmC,kBAAkBnC,KAAKU,QAC5BV,KAAKU,OAAOgC,UACN,MAAyB1C,KAAKU,OAAOC,WAAnCC,EAAQ,WAAEC,EAAQ,WACtBD,GACFA,EAAS8B,UAEP7B,GACFA,EAAS6B,UAGT1C,KAAK+B,eACP/B,KAAK+B,cAAcW,WAIvB,YAAAC,OAAA,WACQ,MAAoB3C,KAAKN,MAAvBc,EAAK,QAAEF,EAAM,SAGfsC,EAAQ,CACZpC,MAHiBlB,EAAYkB,GAI7BF,OAHkBhB,EAAYgB,IAMhC,OACE,uBACEuC,IAAK7C,KAAKL,UACViD,MAAOA,EACPnC,UAAU,mCAlMT,EAAAqC,UAAY,CACjBtC,MAAO,YAAoB,CAAC,SAAkB,WAC9CF,OAAQ,YAAoB,CAAC,SAAkB,WAC/CM,SAAU,SACVI,MAAO,SACPwB,aAAc,SACdpC,SAAU,SACVC,MAAO,SACPE,QAAS,SACTkC,iBAAkB,SAClBZ,gBAAiB,OACjBC,eAAgB,OAChBK,kBAAmB,OACnBD,SAAU,OACVzB,UAAW,UAGN,EAAAsC,aAAe,CACpBvC,MAAO,OACPF,OAAQ,OACRM,SAAU,KACVI,MAAO,KACPwB,aAAc,GACdpC,SAAU,aACVC,MAAO,KACPE,QAAS,GACTkC,iBAAkB,GAClBZ,gBAAiBpC,EACjBqC,eAAgBrC,EAChB0C,kBAAmB1C,EACnByC,SAAUzC,EACVgB,UAAW,MAuKf,EAvMA,CAA+B,aAyM/B,I,w/BCzMA,cAyCE,WAAYf,GAAZ,MACE,YAAMA,IAAM,K,OAwDd,EAAAC,UAAY,SAACC,GACX,EAAKC,iBAAmBD,GAxDxB,EAAKC,sBAAmBC,E,EAsI5B,OAjL2B,OA8CzB,YAAAC,kBAAA,WACEC,KAAKC,cAGP,YAAAC,mBAAA,SAAmBC,GACX,MACJH,KAAKN,MADCsB,EAAK,QAAEZ,EAAQ,WAAEC,EAAK,QAAEC,EAAM,SAAEC,EAAO,UAAEC,EAAK,QAAEC,EAAS,YAGzDC,EAAWV,KAAL,OACRgD,EAAQtC,EAAOC,WA4BrB,GA1BwB,MAApBX,KAAKN,MAAMsB,OAAiBhB,KAAKN,MAAMsB,QAAUgC,EAAMlC,aACzDd,KAAKiB,gCAAiC,EACtCjB,KAAKU,OAAOS,eAGZ6B,EAAM5B,mBACJ,GACA,CACE,CACEC,MAAO2B,EAAM1B,oBACbC,KAAMP,KAIZhB,KAAKU,OAAOS,eACZnB,KAAKiB,gCAAiC,GAEpCd,EAAUC,WAAaA,GACzB,0BAA+B4C,EAAO5C,GAEpCD,EAAUE,QAAUA,GACtB,kBAAuBA,IAErBK,GAAWF,IAAUL,EAAUK,OAASF,IAAWH,EAAUG,QAC/DI,EAAOc,SAELrB,EAAUI,UAAYA,EAAS,CAGiBA,EAA7B,MAAb,IAAkB0C,EAAmB,EAAK1C,EAA5C,WACNG,EAAOe,cAAa,OACdhB,EAAY,CAAEiB,qBAAsBjB,GAAc,IACnDwC,MAKT,YAAAtB,qBAAA,WACE3B,KAAK4B,iBAOP,YAAAA,cAAA,WACE,GAAI5B,KAAKU,OAAQ,CACfV,KAAKmC,kBAAkBnC,KAAKU,QAC5BV,KAAKU,OAAOgC,UACZ,IAAMM,EAAQhD,KAAKU,OAAOC,WACtBqC,GACFA,EAAMN,UAGN1C,KAAK+B,eACP/B,KAAK+B,cAAcW,WAIvB,YAAAzC,WAAA,WACE,IAAMe,EACgB,MAApBhB,KAAKN,MAAMsB,MAAgBhB,KAAKN,MAAMsB,MAAQhB,KAAKN,MAAM8C,aACrD,EAAmDxC,KAAKN,MAAtDU,EAAQ,WAAEC,EAAK,QAAEoC,EAAgB,mBAAEhC,EAAS,YACpD,GAAIT,KAAKH,iBAAkB,CAEzB,IAAMU,EAAU,EAAH,KAAQP,KAAKN,MAAMa,SAAYP,KAAK6B,mBACjD7B,KAAKU,OAAS,gBACZV,KAAKH,iBAAgB,OAEnBmB,MAAK,EACLZ,SAAQ,GACJK,EAAY,CAAEiB,qBAAsBjB,GAAc,IACnDF,GACCF,EAAQ,CAAEA,MAAK,GAAK,IAE1BoC,GAGFzC,KAAK8B,eAAe9B,KAAKU,UAI7B,YAAAmB,gBAAA,WAGE,OADgBA,EADY7B,KAAKN,MAAV,iBACS,IACd,IAGpB,YAAAoC,eAAA,SAAepB,GAAf,WACEV,KAAKN,MAAMoC,eAAepB,EAAQ,GAElCV,KAAK+B,cAAgBrB,EAAOwC,yBAAwB,SAACjB,GAC9C,EAAKhB,gCACR,EAAKvB,MAAMwC,SAASxB,EAAOI,WAAYmB,OAK7C,YAAAE,kBAAA,SAAkBzB,IAEhByB,EAD8BnC,KAAKN,MAAV,mBACPgB,EAAQ,IAG5B,YAAAiC,OAAA,WACQ,MAAoB3C,KAAKN,MAAvBc,EAAK,QAAEF,EAAM,SAGfsC,EAAQ,CACZpC,MAHiBlB,EAAYkB,GAI7BF,OAHkBhB,EAAYgB,IAMhC,OACE,uBACEuC,IAAK7C,KAAKL,UACViD,MAAOA,EACPnC,UAAU,mCA5KT,EAAAqC,UAAY,CACjBtC,MAAO,YAAoB,CAAC,SAAkB,WAC9CF,OAAQ,YAAoB,CAAC,SAAkB,WAC/CU,MAAO,SACPwB,aAAc,SACdpC,SAAU,SACVC,MAAO,SACPE,QAAS,SACTkC,iBAAkB,SAClBZ,gBAAiB,OACjBC,eAAgB,OAChBK,kBAAmB,OACnBD,SAAU,OACVzB,UAAW,UAGN,EAAAsC,aAAe,CACpBvC,MAAO,OACPF,OAAQ,OACRU,MAAO,KACPwB,aAAc,GACdpC,SAAU,aACVC,MAAO,KACPE,QAAS,GACTkC,iBAAkB,GAClBZ,gBAAiBpC,EACjBqC,eAAgBrC,EAChB0C,kBAAmB1C,EACnByC,SAAUzC,EACVgB,UAAW,MAmJf,EAjLA,CAA2B,aAmL3B","sources":["../node_modules/react-monaco-editor/src/utils.ts","../node_modules/react-monaco-editor/src/diff.tsx","../node_modules/react-monaco-editor/src/editor.tsx"],"sourcesContent":["export function processSize(size: number | string) {\n  return !/^\\d+$/.test(size as string) ? size : `${size}px`;\n}\n\nexport function noop() {}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { MonacoDiffEditorProps } from \"./types\";\nimport { noop, processSize } from \"./utils\";\n\nclass MonacoDiffEditor extends React.Component<MonacoDiffEditorProps> {\n  static propTypes = {\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    original: PropTypes.string,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    language: PropTypes.string,\n    theme: PropTypes.string,\n    options: PropTypes.object,\n    overrideServices: PropTypes.object,\n    editorWillMount: PropTypes.func,\n    editorDidMount: PropTypes.func,\n    editorWillUnmount: PropTypes.func,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    original: null,\n    value: null,\n    defaultValue: \"\",\n    language: \"javascript\",\n    theme: null,\n    options: {},\n    overrideServices: {},\n    editorWillMount: noop,\n    editorDidMount: noop,\n    editorWillUnmount: noop,\n    onChange: noop,\n    className: null,\n  };\n\n  editor?: monaco.editor.IStandaloneDiffEditor;\n\n  private containerElement?: HTMLDivElement;\n\n  private _subscription: monaco.IDisposable;\n\n  private __prevent_trigger_change_event?: boolean;\n\n  constructor(props: MonacoDiffEditorProps) {\n    super(props);\n    this.containerElement = undefined;\n  }\n\n  componentDidMount() {\n    this.initMonaco();\n  }\n\n  componentDidUpdate(prevProps: MonacoDiffEditorProps) {\n    const { language, theme, height, options, width, className } = this.props;\n\n    const { original, modified } = this.editor.getModel();\n\n    if (this.props.original !== original.getValue()) {\n      original.setValue(this.props.original);\n    }\n\n    if (this.props.value != null && this.props.value !== modified.getValue()) {\n      this.__prevent_trigger_change_event = true;\n      // modifiedEditor is not in the public API for diff editors\n      this.editor.getModifiedEditor().pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      // @ts-expect-error\n      modified.pushEditOperations(\n        [],\n        [\n          {\n            range: modified.getFullModelRange(),\n            text: this.props.value,\n          },\n        ]\n      );\n      // modifiedEditor is not in the public API for diff editors\n      this.editor.getModifiedEditor().pushUndoStop();\n      this.__prevent_trigger_change_event = false;\n    }\n\n    if (prevProps.language !== language) {\n      monaco.editor.setModelLanguage(original, language);\n      monaco.editor.setModelLanguage(modified, language);\n    }\n    if (prevProps.theme !== theme) {\n      monaco.editor.setTheme(theme);\n    }\n    if (\n      this.editor &&\n      (width !== prevProps.width || height !== prevProps.height)\n    ) {\n      this.editor.layout();\n    }\n    if (prevProps.options !== options) {\n      this.editor.updateOptions({\n        ...(className ? { extraEditorClassName: className } : {}),\n        ...options,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyMonaco();\n  }\n\n  assignRef = (component: HTMLDivElement) => {\n    this.containerElement = component;\n  };\n\n  editorWillMount() {\n    const { editorWillMount } = this.props;\n    const options = editorWillMount(monaco);\n    return options || {};\n  }\n\n  editorDidMount(editor: monaco.editor.IStandaloneDiffEditor) {\n    this.props.editorDidMount(editor, monaco);\n\n    const { modified } = editor.getModel();\n    this._subscription = modified.onDidChangeContent((event) => {\n      if (!this.__prevent_trigger_change_event) {\n        this.props.onChange(modified.getValue(), event);\n      }\n    });\n  }\n\n  editorWillUnmount(editor: monaco.editor.IStandaloneDiffEditor) {\n    const { editorWillUnmount } = this.props;\n    editorWillUnmount(editor, monaco);\n  }\n\n  initModels(value: string, original: string) {\n    const { language } = this.props;\n    const originalModel = monaco.editor.createModel(original, language);\n    const modifiedModel = monaco.editor.createModel(value, language);\n    this.editor.setModel({\n      original: originalModel,\n      modified: modifiedModel,\n    });\n  }\n\n  initMonaco() {\n    const value =\n      this.props.value != null ? this.props.value : this.props.defaultValue;\n    const { original, theme, options, overrideServices, className } =\n      this.props;\n    if (this.containerElement) {\n      // Before initializing monaco editor\n      this.editorWillMount();\n      this.editor = monaco.editor.createDiffEditor(\n        this.containerElement,\n        {\n          ...(className ? { extraEditorClassName: className } : {}),\n          ...options,\n          ...(theme ? { theme } : {}),\n        },\n        overrideServices\n      );\n      // After initializing monaco editor\n      this.initModels(value, original);\n      this.editorDidMount(this.editor);\n    }\n  }\n\n  destroyMonaco() {\n    if (this.editor) {\n      this.editorWillUnmount(this.editor);\n      this.editor.dispose();\n      const { original, modified } = this.editor.getModel();\n      if (original) {\n        original.dispose();\n      }\n      if (modified) {\n        modified.dispose();\n      }\n    }\n    if (this._subscription) {\n      this._subscription.dispose();\n    }\n  }\n\n  render() {\n    const { width, height } = this.props;\n    const fixedWidth = processSize(width);\n    const fixedHeight = processSize(height);\n    const style = {\n      width: fixedWidth,\n      height: fixedHeight,\n    };\n\n    return (\n      <div\n        ref={this.assignRef}\n        style={style}\n        className=\"react-monaco-editor-container\"\n      />\n    );\n  }\n}\n\nexport default MonacoDiffEditor;\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { MonacoEditorProps } from \"./types\";\nimport { noop, processSize } from \"./utils\";\n\nclass MonacoEditor extends React.Component<MonacoEditorProps> {\n  static propTypes = {\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    language: PropTypes.string,\n    theme: PropTypes.string,\n    options: PropTypes.object,\n    overrideServices: PropTypes.object,\n    editorWillMount: PropTypes.func,\n    editorDidMount: PropTypes.func,\n    editorWillUnmount: PropTypes.func,\n    onChange: PropTypes.func,\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    value: null,\n    defaultValue: \"\",\n    language: \"javascript\",\n    theme: null,\n    options: {},\n    overrideServices: {},\n    editorWillMount: noop,\n    editorDidMount: noop,\n    editorWillUnmount: noop,\n    onChange: noop,\n    className: null,\n  };\n\n  editor?: monaco.editor.IStandaloneCodeEditor;\n\n  private containerElement?: HTMLDivElement;\n\n  private _subscription: monaco.IDisposable;\n\n  private __prevent_trigger_change_event?: boolean;\n\n  constructor(props: MonacoEditorProps) {\n    super(props);\n    this.containerElement = undefined;\n  }\n\n  componentDidMount() {\n    this.initMonaco();\n  }\n\n  componentDidUpdate(prevProps: MonacoEditorProps) {\n    const { value, language, theme, height, options, width, className } =\n      this.props;\n\n    const { editor } = this;\n    const model = editor.getModel();\n\n    if (this.props.value != null && this.props.value !== model.getValue()) {\n      this.__prevent_trigger_change_event = true;\n      this.editor.pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      // @ts-expect-error\n      model.pushEditOperations(\n        [],\n        [\n          {\n            range: model.getFullModelRange(),\n            text: value,\n          },\n        ]\n      );\n      this.editor.pushUndoStop();\n      this.__prevent_trigger_change_event = false;\n    }\n    if (prevProps.language !== language) {\n      monaco.editor.setModelLanguage(model, language);\n    }\n    if (prevProps.theme !== theme) {\n      monaco.editor.setTheme(theme);\n    }\n    if (editor && (width !== prevProps.width || height !== prevProps.height)) {\n      editor.layout();\n    }\n    if (prevProps.options !== options) {\n      // Don't pass in the model on update because monaco crashes if we pass the model\n      // a second time. See https://github.com/microsoft/monaco-editor/issues/2027\n      const { model: _model, ...optionsWithoutModel } = options;\n      editor.updateOptions({\n        ...(className ? { extraEditorClassName: className } : {}),\n        ...optionsWithoutModel,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.destroyMonaco();\n  }\n\n  assignRef = (component: HTMLDivElement) => {\n    this.containerElement = component;\n  };\n\n  destroyMonaco() {\n    if (this.editor) {\n      this.editorWillUnmount(this.editor);\n      this.editor.dispose();\n      const model = this.editor.getModel();\n      if (model) {\n        model.dispose();\n      }\n    }\n    if (this._subscription) {\n      this._subscription.dispose();\n    }\n  }\n\n  initMonaco() {\n    const value =\n      this.props.value != null ? this.props.value : this.props.defaultValue;\n    const { language, theme, overrideServices, className } = this.props;\n    if (this.containerElement) {\n      // Before initializing monaco editor\n      const options = { ...this.props.options, ...this.editorWillMount() };\n      this.editor = monaco.editor.create(\n        this.containerElement,\n        {\n          value,\n          language,\n          ...(className ? { extraEditorClassName: className } : {}),\n          ...options,\n          ...(theme ? { theme } : {}),\n        },\n        overrideServices\n      );\n      // After initializing monaco editor\n      this.editorDidMount(this.editor);\n    }\n  }\n\n  editorWillMount() {\n    const { editorWillMount } = this.props;\n    const options = editorWillMount(monaco);\n    return options || {};\n  }\n\n  editorDidMount(editor: monaco.editor.IStandaloneCodeEditor) {\n    this.props.editorDidMount(editor, monaco);\n\n    this._subscription = editor.onDidChangeModelContent((event) => {\n      if (!this.__prevent_trigger_change_event) {\n        this.props.onChange(editor.getValue(), event);\n      }\n    });\n  }\n\n  editorWillUnmount(editor: monaco.editor.IStandaloneCodeEditor) {\n    const { editorWillUnmount } = this.props;\n    editorWillUnmount(editor, monaco);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    const fixedWidth = processSize(width);\n    const fixedHeight = processSize(height);\n    const style = {\n      width: fixedWidth,\n      height: fixedHeight,\n    };\n\n    return (\n      <div\n        ref={this.assignRef}\n        style={style}\n        className=\"react-monaco-editor-container\"\n      />\n    );\n  }\n}\n\nexport default MonacoEditor;\n"],"names":["processSize","size","test","noop","props","assignRef","component","containerElement","undefined","componentDidMount","this","initMonaco","componentDidUpdate","prevProps","language","theme","height","options","width","className","editor","getModel","original","modified","getValue","setValue","value","__prevent_trigger_change_event","getModifiedEditor","pushUndoStop","pushEditOperations","range","getFullModelRange","text","layout","updateOptions","extraEditorClassName","componentWillUnmount","destroyMonaco","editorWillMount","editorDidMount","_subscription","onDidChangeContent","event","onChange","editorWillUnmount","initModels","originalModel","modifiedModel","setModel","defaultValue","overrideServices","dispose","render","style","ref","propTypes","defaultProps","model","optionsWithoutModel","onDidChangeModelContent"],"sourceRoot":""}